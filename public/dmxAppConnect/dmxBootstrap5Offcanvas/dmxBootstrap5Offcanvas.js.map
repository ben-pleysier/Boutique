{"version":3,"sources":["components/offcanvas.js"],"names":["dmx","Component","initialData","open","attributes","show","type","Boolean","default","nobackdrop","nokeyboard","scroll","methods","toggle","requestAnimationFrame","this","_instance","hide","events","Event","shown","hidden","init","node","addEventListener","dispatchEvent","bind","_shownHandler","_hiddenHandler","classList","props","bootstrap","Offcanvas","backdrop","keyboard","performUpdate","updatedProps","has","$node","set"],"mappings":";;;;;;AAAAA,IAAAC,UAAA,gBAAA,CAEAC,YAAA,CACAC,MAAA,GAGAC,WAAA,CACAC,KAAA,CACAC,KAAAC,QACAC,SAAA,GAGAC,WAAA,CACAH,KAAAC,QACAC,SAAA,GAGAE,WAAA,CACAJ,KAAAC,QACAC,SAAA,GAGAG,OAAA,CACAL,KAAAC,QACAC,SAAA,IAIAI,QAAA,CACAC,SACAC,uBAAA,IAAAC,KAAAC,UAAAH,UACA,EAEAR,OACAS,uBAAA,IAAAC,KAAAC,UAAAX,QACA,EAEAY,OACAH,uBAAA,IAAAC,KAAAC,UAAAC,QACA,GAGAC,OAAA,CACAb,KAAAc,MACAC,MAAAD,MACAF,KAAAE,MACAE,OAAAF,OAGAG,KAAAC,GACAA,EAAAC,iBAAA,oBAAAT,KAAAU,cAAAC,KAAAX,KAAA,SACAQ,EAAAC,iBAAA,qBAAAT,KAAAU,cAAAC,KAAAX,KAAA,UACAQ,EAAAC,iBAAA,oBAAAT,KAAAU,cAAAC,KAAAX,KAAA,SACAQ,EAAAC,iBAAA,sBAAAT,KAAAU,cAAAC,KAAAX,KAAA,WAEAQ,EAAAC,iBAAA,qBAAAT,KAAAY,cAAAD,KAAAX,OACAQ,EAAAC,iBAAA,sBAAAT,KAAAa,eAAAF,KAAAX,OAEAQ,EAAAM,UAAAhB,OAAA,OAAAE,KAAAe,MAAAzB,MAEAU,KAAAC,UAAA,IAAAe,UAAAC,UAAAT,EAAA,CACAU,UAAAlB,KAAAe,MAAArB,WACAyB,UAAAnB,KAAAe,MAAApB,WACAC,OAAAI,KAAAe,MAAAnB,QAEA,EAEAwB,cAAAC,GACAA,EAAAC,IAAA,UACAtB,KAAAuB,MAAAT,UAAAhB,OAAA,OAAAE,KAAAe,MAAAzB,MACAU,KAAAwB,IAAA,OAAAxB,KAAAe,MAAAzB,MAEA,EAEAsB,gBACAZ,KAAAwB,IAAA,QAAA,EACA,EAEAX,iBACAb,KAAAwB,IAAA,QAAA,EACA","file":"dmxBootstrap5Offcanvas.js","sourcesContent":["dmx.Component('bs5-offcanvas', {\r\n\r\n  initialData: {\r\n    open: false\r\n  },\r\n\r\n  attributes: {\r\n    show: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n\r\n    nobackdrop: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n\r\n    nokeyboard: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n\r\n    scroll: {\r\n      type: Boolean,\r\n      default: false\r\n    }\r\n  },\r\n\r\n  methods: {\r\n    toggle () {\r\n      requestAnimationFrame(() => this._instance.toggle());\r\n    },\r\n\r\n    show () {\r\n      requestAnimationFrame(() => this._instance.show());\r\n    },\r\n\r\n    hide () {\r\n      requestAnimationFrame(() => this._instance.hide());\r\n    }\r\n  },\r\n\r\n  events: {\r\n    show: Event,\r\n    shown: Event,\r\n    hide: Event,\r\n    hidden: Event\r\n  },\r\n\r\n  init (node) {\r\n    node.addEventListener('show.bs.offcanvas', this.dispatchEvent.bind(this, 'show'));\r\n    node.addEventListener('shown.bs.offcanvas', this.dispatchEvent.bind(this, 'shown'));\r\n    node.addEventListener('hide.bs.offcanvas', this.dispatchEvent.bind(this, 'hide'));\r\n    node.addEventListener('hidden.bs.offcanvas', this.dispatchEvent.bind(this, 'hidden'));\r\n\r\n    node.addEventListener('shown.bs.offcanvas', this._shownHandler.bind(this));\r\n    node.addEventListener('hidden.bs.offcanvas', this._hiddenHandler.bind(this));\r\n\r\n    node.classList.toggle('show', this.props.show);\r\n\r\n    this._instance = new bootstrap.Offcanvas(node, {\r\n      backdrop: !this.props.nobackdrop,\r\n      keyboard: !this.props.nokeyboard,\r\n      scroll: this.props.scroll\r\n    });\r\n  },\r\n\r\n  performUpdate (updatedProps) {\r\n    if (updatedProps.has('show')) {\r\n      this.$node.classList.toggle('show', this.props.show);\r\n      this.set('open', this.props.show);\r\n    }\r\n  },\r\n\r\n  _shownHandler () {\r\n    this.set('open', true);\r\n  },\r\n\r\n  _hiddenHandler () {\r\n    this.set('open', false);\r\n  },\r\n\r\n});"]}